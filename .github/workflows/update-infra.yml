name: Update Infra

on:
  push:
    branches:
      - main
      - dev

jobs:
  deploy_infra:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
    
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.1.7
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }} 

      - name: Terraform Init
        id: init
        run: cd terraform && terraform init
        
      - name: Terraform Validate
        id: validate
        run: cd terraform && terraform validate -no-color
        
      - name: Main Branch -> Terraform Plan
        id: plan
        if: ${{ github.ref == 'refs/heads/main' }}
        run: cd terraform && terraform plan -var-file=./prod.tfvars
        
      - name: Main Branch -> Terraform Apply
        if: ${{ github.ref == 'refs/heads/main' }}
        run: cd terraform && terraform apply -auto-approve -var-file=./prod.tfvars

      - name: Main Branch -> Update Repository Image and Service
        if: ${{ github.ref == 'refs/heads/main' }}
        run: |
          cd api
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 778568866635.dkr.ecr.us-east-1.amazonaws.com
          docker build -t prod-api-boilerplate-repository .
          docker tag prod-api-boilerplate-repository:latest 778568866635.dkr.ecr.us-east-1.amazonaws.com/prod-api-boilerplate-repository:latest
          docker push 778568866635.dkr.ecr.us-east-1.amazonaws.com/prod-api-boilerplate-repository:latest

          aws ecs update-service --cluster prod-ecs-boilerplate-cluster --service prod-ecs-api-service --task-definition prod-ecs-api-task-definition --force-new-deployment
          
      - name: Dev Branch -> Terraform Plan
        id: plan
        if: ${{ github.ref == 'refs/heads/dev' }}
        run: cd terraform && terraform plan -var-file=./dev.tfvars
        
      - name: Dev Branch -> Terraform Apply
        if: ${{ github.ref == 'refs/heads/dev' }}
        run: cd terraform && terraform apply -auto-approve -var-file=./dev.tfvars

      - name: Dev Branch -> Update Repository Image and Service
        if: ${{ github.ref == 'refs/heads/dev' }}
        run: |
          cd api
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 778568866635.dkr.ecr.us-east-1.amazonaws.com
          docker build -t dev-api-boilerplate-repository .
          docker tag dev-api-boilerplate-repository:latest 778568866635.dkr.ecr.us-east-1.amazonaws.com/dev-api-boilerplate-repository:latest
          docker push 778568866635.dkr.ecr.us-east-1.amazonaws.com/dev-api-boilerplate-repository:latest

          aws ecs update-service --cluster dev-ecs-boilerplate-cluster --service dev-ecs-api-service --task-definition dev-ecs-api-task-definition --force-new-deployment